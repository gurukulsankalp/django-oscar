version: "2.1"

volumes:
  oscardb_data:
    driver: local
#  sentry_data:
#    driver: local

services:

  oscardb:
    container_name: oscardb
    image: postgres:11.2
    restart: always
    ports:
      - 5432
    env_file:
      - .env
    command: postgres -c hba_file=/etc/pg_hba.conf
    volumes:
      - ./configs/postgresql/pg_hba.conf:/etc/pg_hba.conf
      - oscardb_data:/var/lib/postgresql/data

  oscar:
    image: trydirect/django-oscar:1.6.7
    build: build
    container_name: oscar
    restart: always
    depends_on:
      - oscardb
    links:
      - oscardb
    env_file:
      - .env
    command: ['supervisord', '--nodaemon']
    volumes:
      - ./app:/app
      - ./configs/oscar/settings.py:/app/sandbox/settings.py
      - ./configs/supervisord/oscar.conf:/etc/supervisor/conf.d/oscar.conf
      - ./scripts/sandbox.sh:/sandbox.sh

  nginx:
    image: trydirect/nginx:latest
    container_name: nginx
    env_file:
      .env
    ports:
      - "80:80"
      #- "443:443"
    volumes:
      - ./app/sandbox/public:/usr/share/nginx/html
      - ./configs/certs/ssl:/etc/ssl/nginx
      - ./configs/certs/letsencrypt:/etc/letsencrypt
      - ./configs/cron/nginx:/var/spool/cron/crontabs
      - ./configs/nginx/conf.d:/etc/nginx/conf.d/
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/null:/etc/nginx/sites-enabled
      - ./configs/supervisord/nginx.conf:/etc/supervisor/conf.d/nginx.conf
    depends_on:
      - oscar
    links:
      - oscar
    entrypoint: /usr/bin/supervisord -c /etc/supervisor/supervisord.conf -n
    restart: always

#  redis:
#    image: redis
#
#  sentrydb:
#    image: postgres:11.2
#    container_name: sentrydb
#    env_file: .env_sentry
#    volumes:
#    - sentry_data:/var/lib/postgresql/data

#  sentry:
#    image: sentry
#    container_name: sentry
#    links:
#      - redis
#      - sentrydb
#      - smtp
#    ports:
#      - 9000:9000
#    env_file: .env_sentry
#
#  cron:
#    image: sentry
#    container_name: sentry_cron
#    links:
#      - redis
#      - sentrydb
#    command: "sentry run cron"
#    env_file: .env_sentry
#
#  worker:
#    image: sentry
#    container_name: sentry_worker
#    links:
#      - redis
#      - sentrydb
#    command: "sentry run worker"
#    env_file: .env_sentry
#
#  smtp:
#    restart: always
#    container_name: sentry_smtp
#    image: tianon/exim4
